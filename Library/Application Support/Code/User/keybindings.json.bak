[
  // ========================
  // ======= MARKDOWN =======
  // ========================
  {
    "key": "cmd+i", // Avoid Copilot conflict
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "s", // Toggle preview to [S]ide
    "command": "markdown.showPreviewToSide",
    "when": "!notebookEditorFocused && editorLangId == 'markdown' && vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "s", // Toggle preview to [S]ide
    "command": "markdown.extension.closePreview",
    "when": "activeWebviewPanelId == 'markdown.preview'"
  },
  {
    "key": "shift-s", // Open mind map to [S]ide
    "command": "markmap-vscode.open",
    "when": "editorLangId == 'markdown' && vim.mode == 'Normal' && editorTextFocus"
  },

  // ========================
  // =======  WINDOW  =======
  // ========================
  {
    "key": "cmd+n",
    "command": "workbench.action.newWindow"
  },

  // ========================
  // ======= VIM SEARCH =====
  // ========================
  {
    "key": "n",
    "command": "editor.action.wordHighlight.next",
    "when": "vim.mode == 'Normal' && editorTextFocus && !searchInputBoxFocus"
  },
  {
    "key": "shift+n",
    "command": "editor.action.wordHighlight.prev",
    "when": "vim.mode == 'Normal' && editorTextFocus && !searchInputBoxFocus"
  },

  // =======================
  // ====   FULLSCREEN  =====
  // =======================
  {
    "key": "f", // [F]ullscreen
    "command": "workbench.action.toggleMaximizeEditorGroup",
    "when": "(editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups) && vim.mode == 'Normal' && (editorTextFocus || activeWebviewPanelId == 'markdown.preview')"
  },
  {
    "key": "shift+f", // [F]ullscreen window
    "command": "workbench.action.toggleFullScreen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || activeWebviewPanelId == 'markdown.preview')"
  },

  // =======================
  // ==== TOGGLE PANELS =====
  // =======================
  {
    "key": "ctrl+t", // [T]erminal
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.chat.toggle"
  },
  {
    "key": "ctrl-s", // [S]idebar
    "command": "workbench.action.toggleSidebarVisibility"
  },

  // =============================
  // ===== CENTER SCROLLING ======
  // =============================
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "up",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "viewPortCenter" }
        }
      ]
    }
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        {
          "command": "editorScroll",
          "args": {
            "to": "down",
            "by": "halfPage"
          }
        },
        {
          "command": "cursorMove",
          "args": { "to": "viewPortCenter" }
        }
      ]
    }
  },

  // =============================
  // ======= LEADER BINDS ========
  // =============================
  {
    "key": "t", // Wri[T]e current file,
    "command": "workbench.action.files.save",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "shift+t", // Wri[T]e all files
    "command": "workbench.action.files.saveAll",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "q", // [Q]uit & save
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.files.save",
        "workbench.action.closeActiveEditor"
      ]
    },
    "when": "vim.mode == 'Normal' && (editorTextFocus || activeWebviewPanelId == 'markdown.preview')"
  },
  {
    "key": "shift-q", // [Q]uit all other editors
    "command": "workbench.action.closeOtherEditors",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space c a", // [C]ode [A]ction
    "command": "editor.action.codeAction",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space c r", // [C]ode [R]ename
    "command": "editor.action.rename",
    "when": "vim.mode == 'Normal' && editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "space c s", // [C]ode [S]ymbol
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space space", // Quick Open
    "command": "workbench.action.quickOpen",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g d", // [G]o to [D]efinition
    "command": "editor.action.revealDefinition",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g r", // [G]o to [R]eferences
    "command": "editor.action.goToReferences",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "space g i", // [G]o to [I]mplementation
    "command": "editor.action.goToImplementation",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "shift-m", // [M]arker previous
    "command": "editor.action.marker.prev",
    "when": "vim.mode == 'Normal' && editorTextFocus && editorLangId != 'markdown'"
  },
  {
    "key": "m", // [M]arker next
    "command": "editor.action.marker.next",
    "when": "vim.mode == 'Normal' && editorTextFocus && editorLangId != 'markdown'"
  },
  {
    "key": "s", // [S]plit
    "command": "workbench.action.splitEditor",
    "when": "vim.mode == 'Normal' && editorTextFocus && editorLangId != 'markdown'"
  },
  {
    "key": "shift-s", // [S]plit down
    "command": "workbench.action.splitEditorDown",
    "when": "vim.mode == 'Normal' && editorTextFocus && editorLangId != 'markdown'"
  },
  {
    "key": "shift-k", // [K]nowledge
    "command": "editor.action.showHover",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "key": "shift-k", // Move lines up
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "key": "shift-j", // Move lines down
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },

  // ================================
  // ======= PANE MANAGEMENT ========
  // ================================
  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl+j",
    "command": "googleTasks.focus",
    "when": "filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "!inputFocus"
  },

  // ========================
  // ========= TABS =========
  // ========================
  {
    "key": "tab",
    "command": "workbench.action.nextEditorInGroup",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift-tab",
    "command": "workbench.action.previousEditorInGroup",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },

  // ==========================
  // ======= FILE TREE ========
  // ==========================
  {
    "key": "r", // [R]ename
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c", // [C]opy
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p", // [P]aste
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d", // [D]elete
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "s", // Open to [S]ide
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift-s", // Open to [S]ide
    "command": "runCommands",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    }
  },
  {
    "key": "enter",
    "command": "explorer.openAndPassFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },

  // =======================
  // ======= EDITOR ========
  // =======================
  {
    "key": "tab",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "down",
    "command": "-selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "up",
    "command": "-selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "tab",
    "command": "quickInput.next",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "shift+tab",
    "command": "quickInput.previous",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "escape",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "tab",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "down",
    "command": "-selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "shift+tab",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "up",
    "command": "-selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },

  // ========================
  // ======= DEBUGGING ========
  // ========================
  {
    "key": "r", // b[R]eakpoint
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "vim.mode == 'Normal' && editorTextFocus && editorLangId != 'markdown'"
  },
  {
    "key": "shift-r", // [R]un
    "command": "workbench.action.debug.start",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && debuggersAvailable && !filesExplorerFocus"
  },
  {
    "key": "escape",
    "command": "workbench.action.debug.stop",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "ctrl-c",
    "command": "workbench.action.debug.stop",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode"
  },
  {
    "key": "n", // [N]ext step
    "command": "workbench.action.debug.stepOver",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },
  {
    "key": "shift+n", // [N]ext breakpoint
    "command": "workbench.action.debug.continue",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && inDebugMode && debugState == 'stopped'"
  },

  // =========================
  // ======= TERMINAL ========
  // =========================
  {
    "key": "ctrl+s", // [S]plit terminal
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+q", // [Q]uit terminal
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  }
]